{"version":3,"sources":["App.tsx","index.tsx"],"names":["LaunchCard","props","cardWidth","milliseconds","date","launchDate","Date","toLocaleString","month","day","year","Card","sx","maxWidth","CardHeader","avatar","patch","Avatar","width","height","alt","src","title","subheader","img","CardMedia","component","image","Box","m","Grid","container","justifyContent","success","Chip","label","color","icon","upcoming","CardContent","Typography","paragraph","variant","id","align","desc","link","CardActions","Button","size","target","href","App","useState","loading","setLoading","launches","setLaunches","useEffect","fetchData","a","fetch","response","json","sortedJSON","sort","b","date_unix","console","log","display","alignItems","CircularProgress","className","spacing","map","launch","item","xs","links","large","name","flickr","original","details","article","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b369c25.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tCard,\n\tCardContent,\n\tCardActions,\n\tCardHeader,\n\tTypography,\n\tAvatar,\n\tCardMedia,\n\tGrid,\n\tButton,\n\tCircularProgress,\n\tChip,\n} from \"@mui/material\";\n//import data from './launch.json';\nimport \"./App.css\";\nimport { Box } from \"@mui/system\";\nimport Done from \"@mui/icons-material/Done\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\n\ninterface Launch {\n\tid: string;\n\tname: string;\n\tdetails: string;\n\tdate: string;\n\tdate_unix: number;\n\tlinks: {\n\t\tpatch: {\n\t\t\tlarge: string;\n\t\t};\n\t\tarticle: string;\n\t\tflickr?: any;\n\t};\n\tsuccess: boolean;\n\tupcoming: boolean;\n}\n\nfunction App() {\n\tconst [loading, setLoading] = useState(true);\n\tconst [launches, setLaunches] = useState<Launch[]>([]);\n\n\tuseEffect(() => {\n\t\tconst url = \"https://api.spacexdata.com/v4/launches\";\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url);\n\t\t\t\tconst json = await response.json();\n\t\t\t\tlet sortedJSON = json.sort((a: any, b: any) =>\n\t\t\t\t\ta.date_unix > b.date_unix ? -1 : 1\n\t\t\t\t);\n\t\t\t\tsetLaunches(sortedJSON as any);\n\t\t\t\tsetLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"error:\", error);\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, []);\n\n\tif (loading) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\theight: \"100vh\",\n\t\t\t\t\twidth: \"100vw\",\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<CircularProgress size={\"10vh\"} />\n\t\t\t</Box>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Box\n\t\t\t\tm={3}\n\t\t\t\tsx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n\t\t\t>\n\t\t\t\t<Grid container justifyContent=\"center\" spacing={4}>\n\t\t\t\t\t{launches.map((launch) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t\t<LaunchCard\n\t\t\t\t\t\t\t\t\tid={launch.id}\n\t\t\t\t\t\t\t\t\tpatch={launch.links.patch.large}\n\t\t\t\t\t\t\t\t\ttitle={launch.name}\n\t\t\t\t\t\t\t\t\tdate={launch.date_unix}\n\t\t\t\t\t\t\t\t\timg={launch.links.flickr.original[1]}\n\t\t\t\t\t\t\t\t\tdesc={launch.details}\n\t\t\t\t\t\t\t\t\tlink={launch.links.article}\n\t\t\t\t\t\t\t\t\tsuccess={launch.success}\n\t\t\t\t\t\t\t\t\tupcoming={launch.upcoming}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Grid>\n\t\t\t</Box>\n\t\t</div>\n\t);\n}\ninterface LaunchCardProps {\n\tid: string;\n\tpatch: string;\n\ttitle: string;\n\tdate: number;\n\timg: string;\n\tdesc: string;\n\tlink: string;\n\tsuccess: boolean;\n\tupcoming: boolean;\n}\n\nfunction LaunchCard(props: LaunchCardProps) {\n\tconst cardWidth = 400;\n\tconst milliseconds = props.date * 1000;\n\tconst dateObject = new Date(milliseconds);\n\tlet launchDate = dateObject.toLocaleString(\"en-US\", {\n\t\tmonth: \"long\",\n\t\tday: \"numeric\",\n\t\tyear: \"numeric\",\n\t});\n\n\treturn (\n\t\t<Card sx={{ maxWidth: cardWidth }}>\n\t\t\t<CardHeader\n\t\t\t\tavatar={\n\t\t\t\t\tprops.patch && (\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tsx={{ width: cardWidth / 7, height: cardWidth / 7 }}\n\t\t\t\t\t\t\talt=\"Launch Patch\"\n\t\t\t\t\t\t\tsrc={props.patch}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\ttitle={props.title}\n\t\t\t\tsubheader={launchDate}\n\t\t\t/>\n\t\t\t{props.img && (\n\t\t\t\t<CardMedia component=\"img\" height={cardWidth / 2} image={props.img} />\n\t\t\t)}\n\t\t\t<Box m={1}>\n\t\t\t\t<Grid container justifyContent=\"center\">\n\t\t\t\t\t{props.success && (\n\t\t\t\t\t\t<Chip label=\"Successful\" color=\"success\" icon={<Done />} />\n\t\t\t\t\t)}\n\t\t\t\t\t{!props.success && !props.upcoming && (\n\t\t\t\t\t\t<Chip label=\"Failed\" color=\"error\" icon={<ErrorIcon />} />\n\t\t\t\t\t)}\n\t\t\t\t\t{props.upcoming && <Chip label=\"Upcoming\" color=\"warning\" />}\n\t\t\t\t</Grid>\n\t\t\t</Box>\n\t\t\t<CardContent>\n\t\t\t\t<Typography paragraph variant=\"caption\" color=\"text.secondary\">\n\t\t\t\t\tLaunch ID: {props.id}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography paragraph variant=\"body2\" color=\"text.primary\" align=\"left\">\n\t\t\t\t\t{props.desc}\n\t\t\t\t</Typography>\n\t\t\t\t{props.link && (\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t<Grid container justifyContent=\"flex-end\">\n\t\t\t\t\t\t\t\t<Button size=\"small\" target=\"_blank\" href={props.link}>\n\t\t\t\t\t\t\t\t\tLearn More\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t</CardContent>\n\t\t</Card>\n\t);\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}